class IslandPerimeter {
    public static int islandPerimeter(int[][] grid) {
        int rows = grid.length;
        int cols = grid[0].length;
        int perimeter = 0;

        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                if (grid[i][j] == 1) {
                    perimeter += 4; // each land contributes 4

                    // check top neighbor
                    if (i > 0 && grid[i - 1][j] == 1) {
                        perimeter -= 2; // shared edge with top
                    }
                    // check left neighbor
                    if (j > 0 && grid[i][j - 1] == 1) {
                        perimeter -= 2; // shared edge with left
                    }
                }
            }
        }

        return perimeter; // ← LeetCode style return
    }

    public static void main(String[] args) {
        int[][] grid = {
            {0,1,0,0},
            {1,1,1,0},
            {0,1,0,0},
            {1,1,0,0}
        };
        System.out.println("Island Perimeter: " + islandPerimeter(grid));
        // Output: 16
    }
}
