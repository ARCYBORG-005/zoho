import java.util.*;

public class SlidingWindowAverageOptimized {
    public static void main(String[] args) {
        int[] arr = {1, 3, 2, 6, -1, 4, 1, 8, 2};
        int k = 5;
        double[] result = findAverages(arr, k);

        System.out.println("Averages of each window:");
        for (double val : result) {
            System.out.print(val + " ");
        }
    }

    public static double[] findAverages(int[] arr, int k) {
        if (arr == null || arr.length == 0 || k <= 0) {
            return new double[0]; // edge case: invalid input
        }
        if (arr.length < k) {
            return new double[0]; // edge case: window size > array length
        }

        double[] result = new double[arr.length - k + 1];
        double windowSum = 0;

        // Initial window sum
        for (int i = 0; i < k; i++) {
            windowSum += arr[i];
        }
        result[0] = windowSum / k;

        // Slide the window
        for (int i = k; i < arr.length; i++) {
            windowSum += arr[i];          // add incoming element
            windowSum -= arr[i - k];      // remove outgoing element
            result[i - k + 1] = windowSum / k;
        }

        return result;
    }
}
